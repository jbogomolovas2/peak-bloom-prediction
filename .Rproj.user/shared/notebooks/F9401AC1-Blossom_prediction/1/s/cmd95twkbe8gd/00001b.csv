"0","df <- latent_df"
"0","df$location <- as.factor(df$location)"
"0","names(df)[names(df) == ""location""] <- ""series"""
"0","df$time <- df$cherry_year - 1981"
"0",""
"0","# Split data into training (<2024) and testing (>=2024)"
"0","train_mvgam <- df[df$cherry_year < 2024, ]"
"0","test_mvgam  <- df[df$cherry_year >= 2024, ]"
"0",""
"0","model <- mvgam(bloom_doy ~ s(latent1, series, bs = ""fs"", k = 3) +"
"0","                           s(latent2, series, bs = ""fs"", k = 3) +"
"0","                           s(latent3, series, bs = ""fs"", k = 3),"
"0","               data = train_mvgam,"
"0","               newdata = test_mvgam,"
"0","               family = gaussian(),"
"0","               control = list(max_treedepth = 12, adapt_delta = 0.99))"
"2","Warning: model has repeated 1-d smooths of same variable."
"2","Warning: model has repeated 1-d smooths of same variable."
"2","Warning: model has repeated 1-d smooths of same variable."
"2","Compiling Stan program using cmdstanr
"
"2","
"
"2","Model executable is up to date!
"
"2","Start sampling
"
"1","Running MCMC with 4 parallel chains...

"
"1","Chain"
"1"," "
"1","1"
"1"," "
"1","Iteration:   1 / 1000 [  0%]  (Warmup)"
"1"," "
"1","
"
"1","Chain"
"1"," "
"1","2"
"1"," "
"1","Iteration:   1 / 1000 [  0%]  (Warmup)"
"1"," "
"1","
"
"1","Chain"
"1"," "
"1","3"
"1"," "
"1","Iteration:   1 / 1000 [  0%]  (Warmup)"
"1"," "
"1","
"
"1","Chain"
"1"," "
"1","4"
"1"," "
"1","Iteration:   1 / 1000 [  0%]  (Warmup)"
"1"," "
"1","
"
"1","Chain"
"1"," "
"1","1"
"1"," "
"1","Iteration: 100 / 1000 [ 10%]  (Warmup)"
"1"," "
"1","
"
"1","Chain"
"1"," "
"1","2"
"1"," "
"1","Iteration: 100 / 1000 [ 10%]  (Warmup)"
"1"," "
"1","
"
"1","Chain"
"1"," "
"1","4"
"1"," "
"1","Iteration: 100 / 1000 [ 10%]  (Warmup)"
"1"," "
"1","
"
"1","Chain"
"1"," "
"1","3"
"1"," "
"1","Iteration: 100 / 1000 [ 10%]  (Warmup)"
"1"," "
"1","
"
"1","Chain"
"1"," "
"1","2"
"1"," "
"1","Iteration: 200 / 1000 [ 20%]  (Warmup)"
"1"," "
"1","
"
"1","Chain"
"1"," "
"1","1"
"1"," "
"1","Iteration: 200 / 1000 [ 20%]  (Warmup)"
"1"," "
"1","
"
"1","Chain"
"1"," "
"1","2"
"1"," "
"1","Iteration: 300 / 1000 [ 30%]  (Warmup)"
"1"," "
"1","
"
"1","Chain"
"1"," "
"1","4"
"1"," "
"1","Iteration: 200 / 1000 [ 20%]  (Warmup)"
"1"," "
"1","
"
"1","Chain"
"1"," "
"1","2"
"1"," "
"1","Iteration: 400 / 1000 [ 40%]  (Warmup)"
"1"," "
"1","
"
"1","Chain"
"1"," "
"1","1"
"1"," "
"1","Iteration: 300 / 1000 [ 30%]  (Warmup)"
"1"," "
"1","
"
"1","Chain"
"1"," "
"1","3"
"1"," "
"1","Iteration: 200 / 1000 [ 20%]  (Warmup)"
"1"," "
"1","
"
"1","Chain"
"1"," "
"1","1"
"1"," "
"1","Iteration: 400 / 1000 [ 40%]  (Warmup)"
"1"," "
"1","
"
"1","Chain"
"1"," "
"1","1"
"1"," "
"1","Iteration: 500 / 1000 [ 50%]  (Warmup)"
"1"," "
"1","
"
"1","Chain"
"1"," "
"1","1"
"1"," "
"1","Iteration: 501 / 1000 [ 50%]  (Sampling)"
"1"," "
"1","
"
"1","Chain"
"1"," "
"1","2"
"1"," "
"1","Iteration: 500 / 1000 [ 50%]  (Warmup)"
"1"," "
"1","
"
"1","Chain"
"1"," "
"1","2"
"1"," "
"1","Iteration: 501 / 1000 [ 50%]  (Sampling)"
"1"," "
"1","
"
"1","Chain"
"1"," "
"1","1"
"1"," "
"1","Iteration: 600 / 1000 [ 60%]  (Sampling)"
"1"," "
"1","
"
"1","Chain"
"1"," "
"1","4"
"1"," "
"1","Iteration: 300 / 1000 [ 30%]  (Warmup)"
"1"," "
"1","
"
"1","Chain"
"1"," "
"1","1"
"1"," "
"1","Iteration: 700 / 1000 [ 70%]  (Sampling)"
"1"," "
"1","
"
"1","Chain"
"1"," "
"1","3"
"1"," "
"1","Iteration: 300 / 1000 [ 30%]  (Warmup)"
"1"," "
"1","
"
"1","Chain"
"1"," "
"1","1"
"1"," "
"1","Iteration: 800 / 1000 [ 80%]  (Sampling)"
"1"," "
"1","
"
"1","Chain"
"1"," "
"1","4"
"1"," "
"1","Iteration: 400 / 1000 [ 40%]  (Warmup)"
"1"," "
"1","
"
"1","Chain"
"1"," "
"1","1"
"1"," "
"1","Iteration: 900 / 1000 [ 90%]  (Sampling)"
"1"," "
"1","
"
"1","Chain"
"1"," "
"1","4"
"1"," "
"1","Iteration: 500 / 1000 [ 50%]  (Warmup)"
"1"," "
"1","
"
"1","Chain"
"1"," "
"1","4"
"1"," "
"1","Iteration: 501 / 1000 [ 50%]  (Sampling)"
"1"," "
"1","
"
"1","Chain"
"1"," "
"1","1"
"1"," "
"1","Iteration: 1000 / 1000 [100%]  (Sampling)"
"1"," "
"1","
"
"1","Chain"
"1"," "
"1","3"
"1"," "
"1","Iteration: 400 / 1000 [ 40%]  (Warmup)"
"1"," "
"1","
"
"1","Chain"
"1"," "
"1","1"
"1"," "
"1","finished in"
"1"," "
"1","5.2"
"1"," "
"1","seconds.
"
"1","Chain"
"1"," "
"1","4"
"1"," "
"1","Iteration: 600 / 1000 [ 60%]  (Sampling)"
"1"," "
"1","
"
"1","Chain"
"1"," "
"1","4"
"1"," "
"1","Iteration: 700 / 1000 [ 70%]  (Sampling)"
"1"," "
"1","
"
"1","Chain"
"1"," "
"1","4"
"1"," "
"1","Iteration: 800 / 1000 [ 80%]  (Sampling)"
"1"," "
"1","
"
"1","Chain"
"1"," "
"1","2"
"1"," "
"1","Iteration: 600 / 1000 [ 60%]  (Sampling)"
"1"," "
"1","
"
"1","Chain"
"1"," "
"1","4"
"1"," "
"1","Iteration: 900 / 1000 [ 90%]  (Sampling)"
"1"," "
"1","
"
"1","Chain"
"1"," "
"1","3"
"1"," "
"1","Iteration: 500 / 1000 [ 50%]  (Warmup)"
"1"," "
"1","
"
"1","Chain"
"1"," "
"1","3"
"1"," "
"1","Iteration: 501 / 1000 [ 50%]  (Sampling)"
"1"," "
"1","
"
"1","Chain"
"1"," "
"1","4"
"1"," "
"1","Iteration: 1000 / 1000 [100%]  (Sampling)"
"1"," "
"1","
"
"1","Chain"
"1"," "
"1","4"
"1"," "
"1","finished in"
"1"," "
"1","7.3"
"1"," "
"1","seconds.
"
"1","Chain"
"1"," "
"1","3"
"1"," "
"1","Iteration: 600 / 1000 [ 60%]  (Sampling)"
"1"," "
"1","
"
"1","Chain"
"1"," "
"1","2"
"1"," "
"1","Iteration: 700 / 1000 [ 70%]  (Sampling)"
"1"," "
"1","
"
"1","Chain"
"1"," "
"1","3"
"1"," "
"1","Iteration: 700 / 1000 [ 70%]  (Sampling)"
"1"," "
"1","
"
"1","Chain"
"1"," "
"1","3"
"1"," "
"1","Iteration: 800 / 1000 [ 80%]  (Sampling)"
"1"," "
"1","
"
"1","Chain"
"1"," "
"1","2"
"1"," "
"1","Iteration: 800 / 1000 [ 80%]  (Sampling)"
"1"," "
"1","
"
"1","Chain"
"1"," "
"1","3"
"1"," "
"1","Iteration: 900 / 1000 [ 90%]  (Sampling)"
"1"," "
"1","
"
"1","Chain"
"1"," "
"1","3"
"1"," "
"1","Iteration: 1000 / 1000 [100%]  (Sampling)"
"1"," "
"1","
"
"1","Chain"
"1"," "
"1","3"
"1"," "
"1","finished in"
"1"," "
"1","14.3"
"1"," "
"1","seconds.
"
"1","Chain"
"1"," "
"1","2"
"1"," "
"1","Iteration: 900 / 1000 [ 90%]  (Sampling)"
"1"," "
"1","
"
"1","Chain"
"1"," "
"1","2"
"1"," "
"1","Iteration: 1000 / 1000 [100%]  (Sampling)"
"1"," "
"1","
"
"1","Chain"
"1"," "
"1","2"
"1"," "
"1","finished in"
"1"," "
"1","18.1"
"1"," "
"1","seconds.
"
"1","
All"
"1"," "
"1","4"
"1"," "
"1","chains finished successfully.
"
"1","Mean chain execution time:"
"1"," "
"1","11.2"
"1"," "
"1","seconds.
"
"1","Total execution time:"
"1"," "
"1","18.2"
"1"," "
"1","seconds.

"
"0","fc <- mvgam::forecast(model, test_mvgam)"
"0",""
"0","# Map full location names to short names for predictions"
"0","location_mapping <- c("
"0","  ""Kyoto, Japan""                = ""kyoto"","
"0","  ""Liestal-Weideli, Switzerland"" = ""liestal"","
"0","  ""New York, USA""               = ""newyorkcity"","
"0","  ""Vancouver, Canada""           = ""vancouver"","
"0","  ""Washington DC, USA""          = ""washingtondc"""
"0",")"
"0",""
"0","cherry_predictions <- data.frame("
"0","  location   = character(),"
"0","  prediction = integer(),"
"0","  lower      = integer(),"
"0","  upper      = integer(),"
"0","  stringsAsFactors = FALSE"
"0",")"
"0",""
"0","# Loop through forecast series for 2025"
"0","for (i in seq_along(fc$series_names)) {"
"0","  full_name <- as.character(fc$series_names[i])"
"0","  short_name <- location_mapping[full_name]"
"0","  "
"0","  draws <- fc$forecasts[[i]][, 2]"
"0","  prediction <- as.integer(round(mean(draws)))"
"0","  ci <- as.integer(round(quantile(draws, probs = c(0.025, 0.975))))"
"0","  "
"0","  cherry_predictions <- rbind(cherry_predictions, data.frame("
"0","    location   = short_name,"
"0","    prediction = prediction,"
"0","    lower      = ci[1],"
"0","    upper      = ci[2],"
"0","    stringsAsFactors = FALSE"
"0","  ))"
"0","}"
"0",""
"0","write.csv(cherry_predictions, file = ""cherry_predictions.csv"", row.names = FALSE)"
"0","print(cherry_predictions)"
